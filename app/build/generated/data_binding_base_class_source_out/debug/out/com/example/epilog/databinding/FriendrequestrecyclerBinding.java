// Generated by view binder compiler. Do not edit!
package com.example.epilog.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ImageView;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.example.epilog.R;
import de.hdodenhof.circleimageview.CircleImageView;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FriendrequestrecyclerBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ImageView accept;

  @NonNull
  public final TextView email;

  @NonNull
  public final CircleImageView friendprofile;

  @NonNull
  public final TextView nickname;

  @NonNull
  public final TextView noticeAcceptOrReject;

  @NonNull
  public final ImageView reject;

  private FriendrequestrecyclerBinding(@NonNull ConstraintLayout rootView,
      @NonNull ImageView accept, @NonNull TextView email, @NonNull CircleImageView friendprofile,
      @NonNull TextView nickname, @NonNull TextView noticeAcceptOrReject,
      @NonNull ImageView reject) {
    this.rootView = rootView;
    this.accept = accept;
    this.email = email;
    this.friendprofile = friendprofile;
    this.nickname = nickname;
    this.noticeAcceptOrReject = noticeAcceptOrReject;
    this.reject = reject;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FriendrequestrecyclerBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FriendrequestrecyclerBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.friendrequestrecycler, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FriendrequestrecyclerBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.accept;
      ImageView accept = ViewBindings.findChildViewById(rootView, id);
      if (accept == null) {
        break missingId;
      }

      id = R.id.email;
      TextView email = ViewBindings.findChildViewById(rootView, id);
      if (email == null) {
        break missingId;
      }

      id = R.id.friendprofile;
      CircleImageView friendprofile = ViewBindings.findChildViewById(rootView, id);
      if (friendprofile == null) {
        break missingId;
      }

      id = R.id.nickname;
      TextView nickname = ViewBindings.findChildViewById(rootView, id);
      if (nickname == null) {
        break missingId;
      }

      id = R.id.noticeAcceptOrReject;
      TextView noticeAcceptOrReject = ViewBindings.findChildViewById(rootView, id);
      if (noticeAcceptOrReject == null) {
        break missingId;
      }

      id = R.id.reject;
      ImageView reject = ViewBindings.findChildViewById(rootView, id);
      if (reject == null) {
        break missingId;
      }

      return new FriendrequestrecyclerBinding((ConstraintLayout) rootView, accept, email,
          friendprofile, nickname, noticeAcceptOrReject, reject);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
